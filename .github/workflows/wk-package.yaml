name: Reusable Workflow - 📦️ Package

on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      tag:
        required: true
        default: false
        type: boolean
    secrets:
      DOCKERHUB_TOKEN:
        required: true
    outputs:
      version:
        description: "Package version"
        value: ${{ jobs.package.outputs.version }}
      image:
        description: "Image built and pushed to docker registry"
        value: ${{ jobs.package.outputs.image }}

jobs:
  package:
    name: 📦️ Package, Build & Push docker image '${{ inputs.image-name }}'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract-version.outputs.version }}
      image: ${{ steps.image-pushed.outputs.image }}
    steps:
      - name: ⤵️ Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: maven

      - name: 📦️ Package application
        run: mvn package -Dmaven.test.skip

      - name: 👓 Extract version
        id: extract-version
        run: |
          project_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          version_without_snapshot=${project_version%-SNAPSHOT}
          echo "version=$version_without_snapshot" >> "$GITHUB_OUTPUT"

      - name: 🐳 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build Docker Image
        run: docker build -t ${{ vars.DOCKERHUB_USERNAME }}/${{ inputs.image-name }}:${{ steps.extract-version.outputs.version }} .

      - name: 🐳 Push Docker Image to registry
        id: image-pushed
        run: |
          docker image push --all-tags ${{ vars.DOCKERHUB_USERNAME }}/${{ inputs.image-name }} 
          echo "image=${{ vars.DOCKERHUB_USERNAME }}/${{ inputs.image-name }}:${{ steps.extract-version.outputs.version }}" >> "$GITHUB_OUTPUT"

      - name: 🔖 Tag
        if: inputs.tag
        run: |
          git tag -a ${{ steps.extract-version.outputs.version }} -m "release candidate v${{ steps.extract-version.outputs.version }}"
          git push origin ${{ steps.extract-version.outputs.version }}
